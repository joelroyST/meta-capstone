// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  name            String
  email           String?  @unique
  facebookId      String   @unique
  provider        String
  favoriteTeams   String[] // Changed to String[] because id of model Team is a String type
  favoritePlayers Int[] // Changed to Int[] becuase id of model Player is an Int type
  leagues         Int[] // Changed to Int[] because id of model League is an Int type
}

model Team {
  id       String   @id // This is from the id the api assigns
  players  Int[] // This refers to refPlayer model
  city     String
  nickName String
  confName String
}

model PlayerStatisticsPerGame {
  id            Int    @id @default(autoincrement())
  gameId        String
  teamId        String
  points        Int
  position      String
  minPlayed     String
  fgm           Int
  fga           Float
  ftm           Int
  fta           Int
  ftp           Float
  tpm           Int
  tpa           Int
  tpp           Float
  offReb        Int
  debReb        Int
  totReb        Int
  assists       Int
  personalFouls Int
  steals        Int
  turnovers     Int
  blocks        Int
  plusMinus     Int
  playerId      Int
}

model League {
  leagueId Int    @id
  name     String
  users    Int[] // Changed to Int[] because model User has an id of type Int
}

model Transactions {
  id               Int    @id @default(autoincrement())
  playersFromTeamA Int[]
  playersFromTeamB Int[]
  userA            Int
  leagueA          Int
  userB            Int
  leagueB          Int
  transactionType  String
  status           String
}

model Player {
  playerId  Int     @id
  firstName String
  lastName  String
  teamId    String? // Refers to real life team
  fantasyTeamId     String? // Refers to fantasy team
  value     Int
}

model RefPlayer {
  id       Int  @id
  metadata Json
}

model FantasyTeam {
  userId    Int
  leagueId  Int
  name      String
  playerIds Int[]

  @@id([userId, leagueId])
}
